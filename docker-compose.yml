version: '3.8'

services:
  # Application Go
  bulk-email-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bulk-email-app
    environment:
      # Choix du provider (mailgun ou gmail)
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}

      # Configuration Mailgun
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}        # ← Ajouté
      - RESEND_FROM_EMAIL=${RESEND_FROM_EMAIL}  # ← Ajouté

      # Configuration Gmail
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_PASSWORD=${SENDER_PASSWORD}
    volumes:
      # Persister la base de données SQLite
      - ./emails.db:/app/emails.db
      # Persister les données CSV
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - bulk-email-network
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  bulk-email-nginx:
    image: nginx:alpine
    container_name: bulk-email-nginx
    ports:
      - "8080:80"
    volumes:
      # Configuration Nginx
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Logs Nginx
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - bulk-email-app
    restart: unless-stopped
    networks:
      - bulk-email-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  bulk-email-network:
    driver: bridge

volumes:
  db-data:
